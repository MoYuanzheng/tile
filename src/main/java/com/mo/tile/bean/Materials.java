package com.mo.tile.bean;

import lombok.Data;

import java.io.Serializable;

/**
 * @TableName materials
 */
@Data
public class Materials implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table materials
     *
     * @mbg.generated Fri Jan 15 17:44:33 CST 2021
     */
    private static final long serialVersionUID = 1L;
    /**
     * @mbg.generated Fri Jan 15 17:44:33 CST 2021
     */
    private String material_id;
    /**
     * @mbg.generated Fri Jan 15 17:44:33 CST 2021
     */
    private String material_name;

    /**
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Materials other = (Materials) that;
        return (this.getMaterial_id() == null ? other.getMaterial_id() == null : this.getMaterial_id().equals(other.getMaterial_id()))
                && (this.getMaterial_name() == null ? other.getMaterial_name() == null : this.getMaterial_name().equals(other.getMaterial_name()));
    }

    /**
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getMaterial_id() == null) ? 0 : getMaterial_id().hashCode());
        result = prime * result + ((getMaterial_name() == null) ? 0 : getMaterial_name().hashCode());
        return result;
    }

    /**
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", material_id=").append(material_id);
        sb.append(", material_name=").append(material_name);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}