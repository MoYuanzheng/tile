package com.mo.tile.entity;

import com.baomidou.mybatisplus.annotation.TableId;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.Serializable;

/**
 * @TableName users
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
public class Users implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users
     *
     * @mbg.generated Fri Jan 15 16:12:23 CST 2021
     */
    private static final long serialVersionUID = 1L;
    /**
     * @mbg.generated Fri Jan 15 16:12:23 CST 2021
     */
    @TableId("user_id")
    private String user_id;
    /**
     * @mbg.generated Fri Jan 15 16:12:23 CST 2021
     */
    private String user_name;
    /**
     * @mbg.generated Fri Jan 15 16:12:23 CST 2021
     */
    private String user_password;
    /**
     * @mbg.generated Fri Jan 15 16:12:23 CST 2021
     */
    private String user_role;
    /**
     * @mbg.generated Fri Jan 15 16:12:23 CST 2021
     */
    private String user_phone;
    /**
     * @mbg.generated Fri Jan 15 16:12:23 CST 2021
     */
    private String user_email;
    /**
     * @mbg.generated Fri Jan 15 16:12:23 CST 2021
     */
    private String users_remarks;

    /**
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Users other = (Users) that;
        return (this.getUser_id() == null ? other.getUser_id() == null : this.getUser_id().equals(other.getUser_id()))
                && (this.getUser_name() == null ? other.getUser_name() == null : this.getUser_name().equals(other.getUser_name()))
                && (this.getUser_password() == null ? other.getUser_password() == null : this.getUser_password().equals(other.getUser_password()))
                && (this.getUser_role() == null ? other.getUser_role() == null : this.getUser_role().equals(other.getUser_role()))
                && (this.getUser_phone() == null ? other.getUser_phone() == null : this.getUser_phone().equals(other.getUser_phone()))
                && (this.getUser_email() == null ? other.getUser_email() == null : this.getUser_email().equals(other.getUser_email()))
                && (this.getUsers_remarks() == null ? other.getUsers_remarks() == null : this.getUsers_remarks().equals(other.getUsers_remarks()));
    }

    /**
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getUser_id() == null) ? 0 : getUser_id().hashCode());
        result = prime * result + ((getUser_name() == null) ? 0 : getUser_name().hashCode());
        result = prime * result + ((getUser_password() == null) ? 0 : getUser_password().hashCode());
        result = prime * result + ((getUser_role() == null) ? 0 : getUser_role().hashCode());
        result = prime * result + ((getUser_phone() == null) ? 0 : getUser_phone().hashCode());
        result = prime * result + ((getUser_email() == null) ? 0 : getUser_email().hashCode());
        result = prime * result + ((getUsers_remarks() == null) ? 0 : getUsers_remarks().hashCode());
        return result;
    }

    /**
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", user_id=").append(user_id);
        sb.append(", user_name=").append(user_name);
        sb.append(", user_password=").append(user_password);
        sb.append(", user_role=").append(user_role);
        sb.append(", user_phone=").append(user_phone);
        sb.append(", user_email=").append(user_email);
        sb.append(", users_remarks=").append(users_remarks);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}